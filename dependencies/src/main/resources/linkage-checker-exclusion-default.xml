<LinkageCheckerFilter>
  <LinkageError>
    <Source>
      <Package name="reactor.core.publisher.Traces" />
    </Source>
    <Reason>
      reactor-core's Traces catches Throwable to detect classes available in
      Java 9+. As Linkage Checker targets Java 8, it ignores these errors to avoid
      false positives.
      https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/816
    </Reason>
  </LinkageError>

  <LinkageError>
    <Target>
      <Package name="jdk.vm.ci" />
    </Target>
    <Source>
      <Package name="com.oracle.svm" />
    </Source>
    <Reason>
      GraalVM-related libraries depend on Java Compiler Interface (JVMCI) that
      only exists in special JDK. These missing classes are false positives, because
      the code is only invoked when running in a GraalVM.
      https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/929
    </Reason>
  </LinkageError>
  <LinkageError>
    <Target>
      <Package name="jdk.vm.ci" />
    </Target>
    <Source>
      <Package name="com.oracle.graal" />
    </Source>
  </LinkageError>
  <LinkageError>
    <Target>
      <Package name="jdk.vm.ci" />
    </Target>
    <Source>
      <Package name="org.graalvm" />
    </Source>
  </LinkageError>
  <LinkageError>
    <Target>
      <Package name="sun.text.normalizer" />
    </Target>
    <Source>
      <Package name="com.oracle.svm.core.jdk8" />
    </Source>
    <Reason>
      Substrate VM is part of GraalVM and the virtual machine references classes in the JVM-internal
      package 'sun.text.normalizer' that are not available in JVM runtime.
      https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/1825
    </Reason>
  </LinkageError>
  <LinkageError>
    <Target>
      <Class name="sun.util.logging.LoggingSupport" />
    </Target>
    <Source>
      <Class name="com.oracle.svm.core.jdk.FormatAccessors" />
    </Source>
    <Reason>
      Substrate VM references the JVM-internal class 'sun.util.logging.LoggingSupport' that are not
      available in JVM runtime.
      https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/1825
    </Reason>
  </LinkageError>
  <LinkageError>
    <Target>
      <Class name="sun.misc.JavaUtilZipFileAccess" />
    </Target>
    <Source>
      <Class name="com.oracle.svm.core.jdk8.zipfile.ZipFileUtil" />
    </Source>
    <Reason>
      Substrate VM references the class that are only available in Java 8.
      https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/1825
    </Reason>
  </LinkageError>
  <LinkageError>
    <Target>
      <Class name="sun.misc.SharedSecrets" />
    </Target>
    <Source>
      <Package name="com.oracle.svm.core.jdk8" />
    </Source>
    <Reason>
      Substrate VM references the class that are only available in Java 8.
      https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/1825
    </Reason>
  </LinkageError>
  <LinkageError>
    <Target>
      <Class name="sun.misc.PerfCounter" />
    </Target>
    <Source>
      <Package name="com.oracle.svm.core.jdk8" />
    </Source>
    <Reason>
      Substrate VM references the class that are only available in Java 8.
      https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/1825
    </Reason>
  </LinkageError>
  <LinkageError>
    <Target>
      <Class name="org.mockito.internal.creation.bytebuddy.MockMethodDispatcher" />
    </Target>
    <Source>
      <Package name="org.mockito.internal.creation.bytebuddy" />
    </Source>
    <Reason>
      Mockito's MockMethodDispatcher uses special class loader to load
      MockMethodDispatcher.raw. The class file with "raw" suffix is in mockito-core JAR file.
      Because Linkage Checker does not use the special class loader, it ignores the missing
      class errors to avoid false positives.
      https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/407
    </Reason>
  </LinkageError>
  <LinkageError>
    <Target>
      <Package name="com.sun.jna" />
    </Target>
    <Source>
      <Package name="reactor.blockhound.shaded.net.bytebuddy.agent.VirtualMachine" />
    </Source>
    <Reason>
      BlockHound shades ByteBuddy's VirtualMachine class. The class uses Java Native Access (JNA)
      only when the com.sun.jna package is available. Therefore the invalid references from the
      VirtualMachine class to JNA classes do not cause linkage errors at runtime.
      https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/1296
    </Reason>
  </LinkageError>
  <LinkageError>
    <Source>
      <Package name="io.netty.util.internal.logging" />
    </Source>
    <Reason>
      InternalLoggerFactory catches and handles errors caused by the missing classes.
      More details in https://github.com/GoogleCloudPlatform/cloud-opensource-java/issues/1872
    </Reason>
  </LinkageError>
  <LinkageError>
    <Source>
      <Package name="io.grpc.netty.shaded.io.netty.util.internal.logging" />
    </Source>
    <Reason>
      grpc-netty-shaded has copies of the netty's internal logging classes. which catches and
      handles errors caused by the missing classes.
    </Reason>
  </LinkageError>
</LinkageCheckerFilter>